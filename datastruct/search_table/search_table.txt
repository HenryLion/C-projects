如何进行查找取决于查找表的结构

1、静态查找表：数据元素含有相同类型关键字，数据元素属于同一个集合。
1.1 顺序查找表：以顺序表或线性链表表示静态查找表
使用顺序查找的方法去查找平均查找长度(n+1)/2，不适用于表长比较大的情况
1.2 有序查找表：顺序存储按照关键字有序排列
1.2.1 有序表使用二分法查找
一般情况下，表长为n的二分查找的判定树的深度和含有n个结点的完全二叉树深度相同。
近似平均查找长度为log以2为底的(n+1) 再减1 (即log2(n+1)-1);
1.3 静态查找树表(各数据查找概率不等)
当每个数据查找概率不同时，使得查找次数最小的判定树称作最优二叉树
次优二叉树：使得左右数据权值和的差的绝对值最小
1.4 索引顺序表
索引顺序表 = 索引 + 顺序表(数组)。一般情况下索引是一个有序表
查找方法:
1) 由索引确定记录所在的区间
2) 在顺序表的某个区间内进行查找
所以，这也是一种缩小区间的查找方法
此法要求数据在整体上有上升或下降趋势。

2、动态查找表
2.1 二叉排序树
二叉排序树或者是一颗空树，或者具有如下特性：
1）若它左子树不空，则左子树上所有节点值均小于根节点的值。
2）若它右子树不空，则右子树上所有节点的值均大于根节点的值。
3）子树也满足上面两个条件。

2.2 二叉平衡树
由于二叉排序树会出现左右子树不平衡，导致性能差。
具有二叉查找树特性且其左右子树深度之差小于1。
当插入节点导致二叉平衡树失去平衡时，采用平衡旋转技术将新树平衡。

2.3 B 树
B树是一种平衡的多路查找树
1) 在m阶的B树上，每个非终端节点可能含有：
n个关键字Ki ( 1<= i <= n)
n个指向记录的指针Di (1 <= i <= n)
n+1个指向子树的指针Ai (0 <= i <= n)
2) 非叶子节点中的多个关键字均自小至大有序排列，即K1 < K2 < ... < Kn， 且Ai-1所指子树上的所有关键字均小于Ki;
3）树中所有叶子节点(空节点)均不带信息，且在树中的同一层次上;根节点或为叶子节点，或至少有两颗子树;其余非叶子节点至少有m/2棵子树，至多有m颗子树。
查找过程：
从根节点出发，沿指针搜索节点和在节点内进行顺序(或折半)查找两个过程交叉进行，若查找成功，则返回指向被查关键字所在节点的指针和关键字在节点中的位置;若查找不成功，则返回插入位置。

38： 6‘08s

2.4 B+ 树

